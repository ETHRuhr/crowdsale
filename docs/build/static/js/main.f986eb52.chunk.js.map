{"version":3,"sources":["components/crowdsale/CrowdsaleContractInfo.js","components/crowdsale/ClosingCountdown.js","components/crowdsale/TokenDistributionCounter.js","components/crowdsale/Register.js","components/crowdsale/CeckRegistration.js","components/crowdsale/OpeningCountdown.js","components/crowdsale/CrowdsaleTokenInfo.js","components/crowdsale/Crowdsale.js","components/LoadWeb3.js","App.js","serviceWorker.js","index.js"],"names":["CrowdsaleContractInfo","_ref","address","react_default","a","createElement","className","href","target","rel","ClosingCountdown","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTime","duration","closingTime","moment","s","Math","floor","m","h","d","setState","state","inherits","createClass","key","value","interval","setInterval","clearInterval","format","Component","TokenDistributionCounter","weiRaised","Register","onContribute","type","onClick","CheckRegistration","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","onCheckRegistration","sent","stop","accountAddress","_this2","onChange","evt","OpeningCountdown","openingTime","CrowdsaleTokenInfo","crowdsaleInfo","CrowdsaleNotStarted","crowdsaleAddress","OpeningCountdown_OpeningCountdown","CrowdsaleFinished","_ref2","ClosingCountdown_ClosingCountdown","CeckRegistration_CheckRegistration","CrowdsaleInProgress","_ref3","Crowdsale","createCrowdsaleDeployerContract","web3","network","CrowdsaleDeployerData","networks","netId","Error","concat","eth","Contract","abi","createCrowdsaleContract","_ref4","crowdsaleDeployer","methods","crowdsale","console","log","abrupt","CrowdsaleData","from","accounts","_x","apply","arguments","createTokenContract","_ref5","_callee2","tokenAddress","_context2","token","TokenData","_x2","loadCrowdsaleInfo","_callee3","data","_context3","Promise","all","cap","Web3","utils","fromWei","unix","_callee4","beneficiary","amount","_context4","toWei","buyTokens","send","t0","error","_ref8","_callee5","balanceInWei","_context5","balanceOf","_x3","_componentDidMount","_callee6","_context6","forceUpdate","now","isBefore","options","isAfter","message","LoadWeb3","isLoading","window","currentProvider","getAccounts","net","getId","netIds","includes","join","LoadWeb3_Error","render","App","LoadWeb3_LoadWeb3","Crowdsale_Crowdsale","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f986eb52.chunk.js","sourcesContent":["import React from 'react';\n\nexport function CrowdsaleContractInfo({ address }) {\n  return (\n    <div className=\"CrowdsaleContractInfo Box\">\n      <h4>Token sale contract address</h4>\n      <a href={'https://rinkeby.etherscan.io/address/' + address} target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>{address}</strong>\n      </a>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nexport class ClosingCountdown extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.updateTime();\n    this.interval = setInterval(this.updateTime, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  updateTime = () => {\n    const duration = this.props.closingTime - moment();\n    const s = Math.floor((duration / 1000) % 60);\n    const m = Math.floor((duration / 1000 / 60) % 60);\n    const h = Math.floor((duration / (1000 * 60 * 60)) % 24);\n    const d = Math.floor(duration / (1000 * 60 * 60 * 24));\n\n    this.setState({s, m, h, d});\n  };\n\n  render() {\n    return (\n      <div className=\"ClosingCountdown Box\">\n        <h4>\n          <strong>END DATE:</strong>\n        </h4>\n        <h4>\n          <strong>{this.props.closingTime.format('LLL')}</strong>\n        </h4>\n        <div className=\"countdown\">\n          <div><strong>{this.state.d}</strong></div>\n          <div><strong>{this.state.h}</strong></div>\n          <div><strong>{this.state.m}</strong></div>\n          <div><strong>{this.state.s}</strong></div>\n        </div>\n        <div className=\"countdown\">\n          <div><strong>DD</strong></div>\n          <div><strong>HH</strong></div>\n          <div><strong>MM</strong></div>\n          <div><strong>SS</strong></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport function TokenDistributionCounter({ weiRaised }) {\n  return (\n    <div className=\"TokenDistributionCounter Box\">\n      <h1>{weiRaised}</h1>\n      <strong>RUHR Tokens distributed</strong>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function Register({onContribute}) {\n  return (\n    <div className=\"Register Box\">\n      <input type=\"button\" onClick={onContribute} value=\"Become an Early Contributer\" />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nexport class CheckRegistration extends Component{\n  constructor(props) {\n    super(props);\n    this.state = { address: this.props.accountAddress}\n  }\n\n  onClick = async () => {\n    const balance = await this.props.onCheckRegistration(this.state.address);\n    this.setState({ balance });\n  };\n\n  render() {\n    let balance;\n    if (this.state.balance) {\n      balance = (\n        <h3>{this.state.balance} RUHR Token</h3>\n      )\n    }\n\n    return (\n      <div className=\"CheckRegistration Box\">\n        <input\n          type=\"text\"\n          value={this.state.address}\n          onChange={evt => this.setState({ address: evt.target.value })}\n        />\n        <button onClick={this.onClick}>Check your Registration</button>\n        {balance}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nexport class OpeningCountdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.updateTime();\n    this.interval = setInterval(this.updateTime, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  updateTime = () => {\n    const duration = this.props.openingTime - moment();\n    const s = Math.floor((duration / 1000) % 60);\n    const m = Math.floor((duration / 1000 / 60) % 60);\n    const h = Math.floor((duration / (1000 * 60 * 60)) % 24);\n    const d = Math.floor(duration / (1000 * 60 * 60 * 24));\n\n    this.setState({s, m, h, d});\n  };\n\n  render() {\n    return (\n      <div className=\"OpeningCountdown Box\">\n        <h4>\n          <strong>OPENING DATE:</strong>\n        </h4>\n        <h4>\n          <strong>{this.props.openingTime.format('LLL')}</strong>\n        </h4>\n        <h4>\n\n        </h4>\n        <div className=\"countdown\">\n          <div><strong>{this.state.d}</strong></div>\n          <div><strong>{this.state.h}</strong></div>\n          <div><strong>{this.state.m}</strong></div>\n          <div><strong>{this.state.s}</strong></div>\n        </div>\n        <div className=\"countdown\">\n          <div><strong>DD</strong></div>\n          <div><strong>HH</strong></div>\n          <div><strong>MM</strong></div>\n          <div><strong>SS</strong></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport function CrowdsaleTokenInfo({ crowdsaleInfo }) {\n  return (\n    <div className=\"CrowdsaleTokenInfo Box\">\n      <h4>Token Info</h4>\n      <table>\n        <tbody>\n        <tr>\n          <th></th>\n          <th></th>\n        </tr>\n        <tr>\n          <td>Symbol</td>\n          <td>RUHR</td>\n        </tr>\n        <tr>\n          <td>RUHR Token Amount</td>\n          <td>40 Million</td>\n        </tr>\n        <tr>\n          <td>RUHR Token Price</td>\n          <td>0.0001 ETH</td>\n        </tr>\n        <tr>\n          <td>Crowdsale Opening</td>\n          <td>{crowdsaleInfo.openingTime.format('L')}</td>\n        </tr>\n        <tr>\n          <td>Crowdsale Closing</td>\n          <td>{crowdsaleInfo.closingTime.format('L')}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport moment from 'moment';\nimport './Crowdsale.css';\nimport { CrowdsaleContractInfo } from './CrowdsaleContractInfo';\nimport { ClosingCountdown } from './ClosingCountdown';\nimport { TokenDistributionCounter } from './TokenDistributionCounter';\nimport { Register } from './Register';\nimport { CheckRegistration } from './CeckRegistration';\nimport { OpeningCountdown } from './OpeningCountdown';\nimport { CrowdsaleTokenInfo } from './CrowdsaleTokenInfo';\n\nimport CrowdsaleData from 'crowdsale/build/contracts/RuhrCrowdsale.json';\nimport CrowdsaleDeployerData from 'crowdsale/build/contracts/RuhrCrowdsaleDeployer.json';\nimport TokenData from 'crowdsale/build/contracts/RuhrToken.json';\n\nfunction CrowdsaleNotStarted({ crowdsaleInfo, crowdsaleAddress }) {\n  return (\n    <div className=\"Crowdsale\">\n      <h3>ETH.RUHR ICO will be live soon!</h3>\n      <CrowdsaleContractInfo address={crowdsaleAddress} />\n      <div className=\"column column-2\">\n        <OpeningCountdown openingTime={crowdsaleInfo.openingTime} />\n        <CrowdsaleTokenInfo crowdsaleInfo={crowdsaleInfo} />\n      </div>\n    </div>\n  );\n}\n\nfunction CrowdsaleFinished({\n  crowdsaleInfo,\n  crowdsaleAddress,\n  accountAddress,\n  onCheckRegistration\n}) {\n  return (\n    <div className=\"Crowdsale\">\n      <h3>ETH.RUHR ICO is over!</h3>\n      <CrowdsaleContractInfo address={crowdsaleAddress} />\n      <div className=\"column column-2\">\n        <ClosingCountdown closingTime={crowdsaleInfo.closingTime} />\n        <TokenDistributionCounter weiRaised={crowdsaleInfo.weiRaised} />\n      </div>\n      <CheckRegistration\n        accountAddress={accountAddress}\n        onCheckRegistration={onCheckRegistration}\n      />\n    </div>\n  );\n}\n\nfunction CrowdsaleInProgress({\n  crowdsaleInfo,\n  crowdsaleAddress,\n  accountAddress,\n  onContribute,\n  onCheckRegistration\n}) {\n  return (\n    <div className=\"Crowdsale\">\n      <h3>ETH.RUHR ICO is live!</h3>\n      <CrowdsaleContractInfo address={crowdsaleAddress} />\n      <div className=\"column column-2\">\n        <ClosingCountdown closingTime={crowdsaleInfo.closingTime} />\n        <TokenDistributionCounter weiRaised={crowdsaleInfo.weiRaised} />\n      </div>\n      <Register onContribute={onContribute} />\n      <CheckRegistration\n        accountAddress={accountAddress}\n        onCheckRegistration={onCheckRegistration}\n      />\n    </div>\n  );\n}\n\nexport class Crowdsale extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      crowdsaleInfo: null\n    };\n  }\n\n  async componentDidMount() {\n    this.interval = setInterval(() => this.forceUpdate(), 5000);\n\n    this.crowdsaleDeployer = this.createCrowdsaleDeployerContract(\n      this.props.web3\n    );\n    this.crowdsale = await this.createCrowdsaleContract(this.props.web3);\n    this.token = await this.createTokenContract(this.props.web3);\n\n    this.loadCrowdsaleInfo();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  createCrowdsaleDeployerContract = web3 => {\n    const network = CrowdsaleDeployerData.networks[this.props.netId];\n    if (!network) {\n      throw new Error(\n        `RuhrCrowdsaleDeployer not deployed to network ${this.props.netId}`\n      );\n    }\n\n    return new web3.eth.Contract(CrowdsaleDeployerData.abi, network.address);\n  };\n\n  createCrowdsaleContract = async web3 => {\n    const crowdsaleAddress = await this.crowdsaleDeployer.methods\n      .crowdsale()\n      .call();\n\n    console.log('crowdsaleAddress', crowdsaleAddress);\n    return new web3.eth.Contract(CrowdsaleData.abi, crowdsaleAddress, {\n      from: this.props.accounts[0]\n    });\n  };\n\n  createTokenContract = async web3 => {\n    const tokenAddress = await this.crowdsaleDeployer.methods.token().call();\n\n    console.log('tokenAddress', tokenAddress);\n    return new web3.eth.Contract(TokenData.abi, tokenAddress, {\n      from: this.props.accounts[0]\n    });\n  };\n\n  loadCrowdsaleInfo = async () => {\n    const data = await Promise.all([\n      this.crowdsale.methods.weiRaised().call(),\n      this.crowdsale.methods.cap().call(),\n      this.crowdsale.methods.openingTime().call(),\n      this.crowdsale.methods.closingTime().call()\n    ]);\n\n    const crowdsaleInfo = {\n      weiRaised: Web3.utils.fromWei(data[0]),\n      cap: Web3.utils.fromWei(data[1]),\n      openingTime: moment.unix(data[2]), // moment().subtract(15, 'seconds'),\n      closingTime: moment.unix(data[3]) // moment().subtract(1, 'hour'),\n    };\n\n    console.log('crowdsaleInfo', crowdsaleInfo, data[2], data[3]);\n    this.setState({ crowdsaleInfo });\n  };\n\n  onContribute = async () => {\n    const beneficiary = this.props.accounts[0];\n    const amount = Web3.utils.toWei('0.01');\n\n    console.log(`contributing to beneficiary ${beneficiary}`);\n    try {\n      const tx = await this.crowdsale.methods\n        .buyTokens(beneficiary)\n        .send({ value: amount });\n    } catch (ex) {\n      console.error(ex);\n    }\n  };\n\n  onCheckRegistration = async address => {\n    try {\n      const balanceInWei = await this.token.methods.balanceOf(address).call();\n      return Web3.utils.fromWei(balanceInWei);\n    } catch (ex) {\n      console.error(ex);\n      return '';\n    }\n  };\n\n  render() {\n    if (!this.state.crowdsaleInfo) {\n      return <div>Loading ...</div>;\n    }\n\n    const crowdsaleInfo = this.state.crowdsaleInfo;\n    const now = moment();\n\n    if (now.isBefore(crowdsaleInfo.openingTime)) {\n      return (\n        <CrowdsaleNotStarted\n          crowdsaleInfo={crowdsaleInfo}\n          crowdsaleAddress={this.crowdsale.options.address}\n        />\n      );\n    } else if (now.isAfter(crowdsaleInfo.closingTime)) {\n      return (\n        <CrowdsaleFinished\n          crowdsaleInfo={crowdsaleInfo}\n          crowdsaleAddress={this.crowdsale.options.address}\n          accountAddress={this.props.accounts[0]}\n          onCheckRegistration={this.onCheckRegistration}\n        />\n      );\n    }\n\n    return (\n      <CrowdsaleInProgress\n        crowdsaleInfo={crowdsaleInfo}\n        crowdsaleAddress={this.crowdsale.options.address}\n        accountAddress={this.props.accounts[0]}\n        onContribute={this.onContribute}\n        onCheckRegistration={this.onCheckRegistration}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\n\nfunction Error({ message }) {\n  return (\n    <div className=\"error\">\n      <strong>Error:</strong>\n      {message}\n    </div>\n  );\n}\n\nexport class LoadWeb3 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      error: null,\n      web3: null\n    };\n  }\n\n  /*\n   * Instantiate Web3 and make sure that:\n   *  1. MetaMask Plugin is available\n   *  2. MetaMask Plugin is unlocked\n   *  3. A supported network is selected in MetaMask\n   */\n  async componentDidMount() {\n    if (!window.web3 || !window.web3.currentProvider) {\n      this.setState({ error: 'MetaMask nicht vorhanden.' });\n      return;\n    }\n\n    const web3 = new Web3(window.web3.currentProvider);\n\n    let accounts;\n    try {\n      accounts = await web3.eth.getAccounts();\n    } catch (ex) {\n      this.setState({\n        isLoading: false,\n        error: 'MetaMask gesperrt.'\n      });\n      return;\n    }\n\n    const netId = await web3.eth.net.getId();\n    if (!this.props.netIds.includes(netId)) {\n      this.setState({\n        isLoading: false,\n        error: `This app only supports the following networks: ${this.props.netIds.join(',')}`\n      });\n      return;\n    }\n\n    this.setState({\n      isLoading: false,\n      web3: web3,\n      netId: netId,\n      accounts: accounts\n    });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (<div>Loading ...</div>)\n    }\n\n    if (this.state.error) {\n      return (<Error message={this.state.error}/>);\n    }\n\n    console.log('Loaded web3', this.state.web3, this.state.netId, this.state.accounts);\n    return this.props.render(this.state.web3, this.state.netId, this.state.accounts);\n  }\n}\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport { Crowdsale } from './components/crowdsale/Crowdsale';\nimport { LoadWeb3 } from './components/LoadWeb3';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <LoadWeb3\n          netIds={[4, 17101710]}\n          render={(web3, netId, accounts) => (\n            <Crowdsale\n              web3={web3}\n              netId={netId}\n              accounts={accounts}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}